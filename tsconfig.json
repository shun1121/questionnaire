{
  "compilerOptions": {
    "target": "esnext",                                  /* 変換はbabelでしたいから"esnext"を指定。Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "jsx": "react",                                      /* Specify what JSX code is generated. */
    
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    
    /* モジュール解決方法 */
    "moduleResolution": "node",                          /* tscのモジュール解決の方法を指定する。*/
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    "isolatedModules": true,                             /* コンパイル対象のファイル間の関係性を一切無視して、全てのファイルを単一のモジュールとしてコンパイルする */
    "allowSyntheticDefaultImports": true,                /*　コンパイル時にコンパイルエラーを出さずにコンパイルを通す。コード生成には影響を与えない。そのため、エラーがあれば動かないまま。　*/
    
    "noEmit": true,                                      /* コンパイル結果を出力しなくなる。tscによる型チェックだけを機能として利用したい場合（Babelなど他ツールが実際のコンパイルを行う場合）に使用する。 */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "strictNullChecks": true,                            /* When type checking, take into account `null` and `undefined`. */
    "noUnusedLocals": true,                              /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
  },
  "include": ["src/**/*.ts", "src/**/*.tsx"],            /* コンパイルする対象ファイルを記述する。src配下の全てのts、tsxファイルを指定。 */
  "exclude": ["node_modules"],                           /* コンパイルする対象から外すファイルを記述する。 */
}
